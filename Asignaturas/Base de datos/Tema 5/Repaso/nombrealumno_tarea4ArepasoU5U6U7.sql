USE SOCIEDADE_CULTURAL;

SELECT ESTADO , (
	SELECT COUNT(*) FROM AULA
	WHERE estado = A.estado
) AS CONTEO
FROM AULA A
GROUP BY ESTADO


SELECT ESTADO , COUNT(*)
FROM AULA 
WHERE estado = 'B'
GROUP BY estado

UNION 


SELECT ESTADO , COUNT(*)
FROM AULA 
WHERE estado = 'M'
GROUP BY estado

UNION 


SELECT ESTADO , COUNT(*)
FROM AULA 
WHERE estado = 'R'
GROUP BY estado

-- 3
SELECT NOME, 
	CAST( CAST(DAY(data_ini) AS VARCHAR) + CAST(', ' AS VARCHAR) + 
		CASE CAST(MONTH(data_ini) AS VARCHAR)
			WHEN '1' THEN CAST('ENERO' AS VARCHAR)
			WHEN '2' THEN 'FEBRERO'
			WHEN '3' THEN 'MARZO'
			WHEN '4' THEN 'ABRIL'
			WHEN '5' THEN 'MAYO'
			ELSE CAST(MONTH(DATA_INI) AS VARCHAR)
		END  + CAST(', ' AS VARCHAR) + CAST(YEAR(DATA_INI) AS VARCHAR) AS VARCHAR)
, prezo
FROM ACTIVIDADE


-- 4.
SELECT NOME, num_aula, COUNT(num_socio) AS CONTEO
FROM ACTIVIDADE A 
INNER JOIN SOCIO_REALIZA_ACTI SRA ON SRA.id_actividade = A.identificador
GROUP BY nome, num_aula
HAVING COUNT(num_socio) < 2


SELECT NOME, num_aula, COUNT(num_socio) AS CONTEO_ALUM,
	COUNT(num_profesorado) AS CONTEO_PROFESORES
FROM ACTIVIDADE A 
INNER JOIN PROFE_CURSA_ACTI SRA2 ON SRA2.id_actividade = A.identificador
INNER JOIN SOCIO_REALIZA_ACTI SRA ON SRA.id_actividade = A.identificador
GROUP BY nome, num_aula
HAVING COUNT(num_socio) > 1


--5.

SELECT LEFT(nif, 2) + ':' + SUBSTRING(NIF, 3, 2) +':' + SUBSTRING(NIF,5,2)+
	':' + SUBSTRING(nif,7,2) + '-' +RIGHT(nif,1)
FROM EMPREGADO E
WHERE NUMERO NOT IN (SELECT NUM_SOCIO FROM SOCIO_REALIZA_ACTI)
	AND tel_fixo IS NOT NULL
	
	
SELECT LEFT(nif, 2) + ':' + SUBSTRING(NIF, 3, 2) +':' + SUBSTRING(NIF,5,2)+
	':' + SUBSTRING(nif,7,2) + '-' +RIGHT(nif,1)
FROM EMPREGADO S
WHERE not EXISTS (SELECT NUM_SOCIO FROM SOCIO_REALIZA_ACTI
						WHERE num_socio = S.numero)
	AND tel_fixo IS NOT NULL
	
	


 
SELECT TELEFONO2 FROM SOCIO
SELECT NUM_SOCIO FROM SOCIO_REALIZA_ACTI

-- Subconsulta , existencia y multitabla que es inner join

-- 6.

DECLARE @MAX_COTA INT
SELECT TOP 1 @MAX_COTA =  IMPORTE
FROM COTA
ORDER BY IMPORTE DESC

SELECT @MAX_COTA

SELECT nome , data_ini, data_fin , DATEDIFF(WW, data_ini, DATA_FIN) AS ww
FROM ACTIVIDADE A 
WHERE prezo < @MAX_COTA

-- 6B.
SELECT nome , data_ini, data_fin , DATEDIFF(WW, data_ini, DATA_FIN) AS ww
FROM ACTIVIDADE A 
GROUP BY NOME, DATA_INI, DATA_FIN			
HAVING 4 > (SELECT AVG (DATEDIFF(WW, data_ini, DATA_FIN)) 
			FROM ACTIVIDADE)
			
-- 7.
SELECT C.NOME,IMPORTE
FROM COTA C 
INNER JOIN SOCIO S ON S.cod_cota = C.codigo
WHERE importe BETWEEN 40 AND 100

SELECT C.NOME,IMPORTE
FROM COTA C 
WHERE importe BETWEEN 40 AND 100
	AND codigo IN (SELECT cod_cota FROM SOCIO)
	
	
-- 8.
SELECT NIF, nome, ape1
FROM SOCIO S 
INNER JOIN SOCIO_REALIZA_ACTI SRA ON S.NUMERO = SRA.num_socio
WHERE id_actividade IN (
	SELECT id_actividade 
	FROM PROFE_CURSA_ACTI PCA 
	INNER JOIN PROFESORADO PRO ON PRO.num_prof = PCA.num_profesorado
)

-- 9.

SELECT S.NIF, S.NOME, S.APE1 , COUNT(S2.numero),
		(SELECT COUNT(*) FROM SOCIO_REALIZA_ACTI
			WHERE num_socio = S.NUMERO)
FROM SOCIO S 
INNER JOIN SOCIO S2 ON S2.socio_recomienda = S.numero
GROUP BY S.NIF, S.nome, S.APE1

SELECT* FROM SOCIO


-- 10 
SELECT NIF 
FROM EMPREGADO E 
WHERE E.salario_mes > (
	SELECT SUM(PREZO)
	FROM ACTIVIDADE A
	WHERE A.num_profesorado_imparte = E.numero
	
)

-- 11.
SELECT NIF , E.nome + ' ' + APE1 + ' ' + ISNULL(ape2, ''), CARGO + 
		A.NOME AS CURSO
FROM EMPREGADO E 
LEFT JOIN PROFE_CURSA_ACTI PCA ON PCA.num_profesorado = E.numero
LEFT JOIN ACTIVIDADE A ON A.identificador = PCA.id_actividade

-- 12


DECLARE @MAX_COTA2 INT
SELECT TOP 1 @MAX_COTA2 =  IMPORTE
FROM COTA
ORDER BY IMPORTE DESC

SELECT NIF , SUM(PREZO) AS TOTAL_GASTO
FROM SOCIO S 
INNER JOIN SOCIO_REALIZA_ACTI SRA ON SRA.num_socio = S.NUMERO
INNER JOIN ACTIVIDADE A ON A.identificador = SRA.id_actividade
GROUP BY NIF
HAVING SUM(PREZO) > @MAX_COTA2

-- 13.
SELECT A.numero ,descricion, superficie, estado , 
		AC.NOME, AC.PREZO, AC.IDENTIFICADOR
FROM AULA A 
RIGHT JOIN ACTIVIDADE AC ON A.numero = AC.num_aula


-- 13 b .
SELECT A.numero ,descricion, superficie, estado , 
		AC.NOME, AC.PREZO, AC.IDENTIFICADOR
FROM AULA A 
LEFT JOIN ACTIVIDADE AC ON A.numero = AC.num_aula

-- 14
SELECT data_ini, data_fin, DATEDIFF(DD, data_ini, data_fin) AS DIF_DIA,
		DATEDIFF(MM, data_ini, data_fin) AS DIF_MES,	
		DATEDIFF(ww, data_ini, data_fin) AS DIF_SEMANAS,
		DATEDIFF(hh, data_ini, data_fin) AS DIF_HORAS
FROM ACTIVIDADE A 

-- 15 
SELECT DATA_INI , DATEADD(YYYY, 1 , DATA_INI) AS FECHA_1_ANO
FROM ACTIVIDADE

-- 16
SELECT nome + ' ' + APE1 + ' ' + ISNULL(ape2, '') AS APE2, 
	COALESCE(telefono1, TELEFONO2, 'sIN TELEFONO') AS TELEFONO
INTO INFO_TELEFONOS
FROM SOCIO

-- 17 
SELECT TOP 1 NUMERO, COUNT(id_actividade) AS CONTEO
FROM SOCIO S
INNER JOIN SOCIO_REALIZA_ACTI SRA ON SRA.num_socio = S.numero
GROUP BY NUMERO
ORDER BY CONTEO DESC


SELECT NUMERO, COUNT(id_actividade) AS CONTEO
FROM SOCIO S
INNER JOIN SOCIO_REALIZA_ACTI SRA ON SRA.num_socio = S.numero
GROUP BY NUMERO
HAVING COUNT(id_actividade) = (
	SELECT MAX()
)


--18
SELECT * FROM AULA






