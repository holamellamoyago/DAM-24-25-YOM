USE CATASTRO;

-- 1.
SELECT ZU.NOMBREZONA, DESCRIPCIÓN 
FROM ZONAURBANA ZU
INNER JOIN VIVIENDA V ON V.NOMBREZONA = ZU.NOMBREZONA
INNER JOIN BLOQUEPISOS BP ON BP.CALLE = V.CALLE AND BP.NUMERO = V.NUMERO
WHERE ASCENSOR = 'N'

-- 2.

SELECT DISTINCT ZU.NOMBREZONA, (
	SELECT COUNT(*) FROM BLOQUEPISOS BP
	WHERE BP.CALLE = V.CALLE AND BP.NUMERO = V.NUMERO AND ASCENSOR='N'
)
FROM ZONAURBANA ZU
INNER JOIN VIVIENDA V ON V.NOMBREZONA = ZU.NOMBREZONA


-- 3.


SELECT ZU.NOMBREZONA
FROM ZONAURBANA ZU
INNER JOIN VIVIENDA V ON V.NOMBREZONA = ZU.NOMBREZONA
INNER JOIN CASAPARTICULAR CP ON CP.CALLE = V.CALLE AND CP.NUMERO = V.NUMERO
GROUP BY ZU.NOMBREZONA
HAVING SUM(CASE PISCINA WHEN 'S' THEN 1 ELSE 0 END) > 2




SELECT * FROM CASAPARTICULAR

SELECT * FROM ZONAURBANA ZU
INNER JOIN VIVIENDA V ON ZU.NOMBREZONA = V.NOMBREZONA

-- 4.
SELECT DNI , NOMBRE, APELLIDO1, ISNULL(APELLIDO2, '')
FROM PROPIETARIO PRO
WHERE NOT EXISTS (
	SELECT DNI FROM PISO P 
	WHERE P.DNIPROPIETARIO = PRO.DNI
)

SELECT DNI , NOMBRE, APELLIDO1, ISNULL(APELLIDO2, '')
FROM PROPIETARIO PRO
WHERE DNI NOT IN (
	SELECT DNIPROPIETARIO FROM PISO P 
)

-- 5. 

SELECT COUNT(*) AS [MUJERES CON ... ]
FROM PROPIETARIO PRO
INNER JOIN PISO P ON PRO.DNI = P.DNIPROPIETARIO
INNER JOIN CASAPARTICULAR CP ON PRO.DNI = CP.DNIPROPIETARIO
INNER JOIN BLOQUEPISOS BP ON BP.CALLE = P.CALLE AND BP.NUMERO = P.NUMERO
WHERE PRO.SEXO = 'M' AND 
	CP.PISCINA = 'S' AND 
	BP.ASCENSOR = 'S'
	

-- 6.
SELECT DNI, NOMBRE, APELLIDO1, ISNULL(APELLIDO2, ''), (
	CASE
		WHEN (SELECT COUNT(DNIPROPIETARIO) FROM CASAPARTICULAR
				WHERE DNIPROPIETARIO = PRO.DNI) > 0 THEN 'POSEE AL MENOS UNA CASA'
		ELSE 'NO TIENE NINGUNA CASA PARTICULAR'
		END 
	
) AS [DESCRIPCIÓN PISO] 
FROM PROPIETARIO PRO


--8.

SELECT DISTINCT ISNULL(V.NOMBREZONA, V2.NOMBREZONA), COUNT(*)
FROM PROPIETARIO PRO 
LEFT JOIN PISO P ON PRO.DNI = P.DNIPROPIETARIO
LEFT JOIN CASAPARTICULAR CP ON CP.DNIPROPIETARIO = PRO.DNI
LEFT JOIN VIVIENDA V ON CP.CALLE = V.CALLE AND CP.NUMERO = V.NUMERO
LEFT JOIN VIVIENDA V2 ON P.CALLE = V2.CALLE AND P.NUMERO = V2.NUMERO
WHERE PRO.SEXO = 'H' AND (V.NOMBREZONA IS NOT NULL OR V2.NOMBREZONA IS NOT NULL)
GROUP BY V.NOMBREZONA, V2.NOMBREZONA


SELECT NOMBREZONA FROM VIVIENDA

-- 9.
SELECT V.CALLE + ', ' + CAST(V.NUMERO AS VARCHAR) AS BLOQUE, METROSSOLAR, SUM(METROSUTILES) AS SUMA_METROS_UTILES, 
		SUM(METROSCONSTRUIDOS) AS METROS_CONSTRUIDOS
FROM VIVIENDA V 
INNER JOIN PISO P ON P.CALLE = V.CALLE AND P.NUMERO = V.NUMERO
GROUP BY V.CALLE , V.NUMERO, V.METROSSOLAR

-- 10.

SELECT V.CALLE + ', ' + CAST(V.NUMERO AS VARCHAR) AS BLOQUE, METROSSOLAR, SUM(METROSUTILES) AS SUMA_METROS_UTILES, 
		SUM(METROSCONSTRUIDOS) AS METROS_CONSTRUIDOS, COUNT(*) AS PISOS,
		COUNT( DISTINCT DNIPROPIETARIO) AS PROPIETARIOS
FROM VIVIENDA V 
INNER JOIN PISO P ON P.CALLE = V.CALLE AND P.NUMERO = V.NUMERO
INNER JOIN PROPIETARIO PRO ON PRO.DNI = P.DNIPROPIETARIO
GROUP BY V.CALLE , V.NUMERO, V.METROSSOLAR
ORDER BY PISOS ASC , PROPIETARIOS

-- 11.

SELECT TOP 1 DNI , NOMBRE, APELLIDO1, ISNULL(APELLIDO2, '')	, 
				SUM(METROS) AS TOTAL_METROS
FROM PROPIETARIO PRO 
INNER JOIN HUECO H ON H.DNIPROPIETARIO = PRO.DNI
WHERE TIPO='BODEGA' OR TIPO='TRASTERO'
GROUP BY DNI, NOMBRE, APELLIDO1, APELLIDO2, METROS
ORDER BY METROS DESC


SELECT TOP 1 DNI , NOMBRE, APELLIDO1, ISNULL(APELLIDO2, '') AS APE2	, 
				SUM(METROS) AS METROS2
FROM HUECO H
INNER JOIN PROPIETARIO PRO ON PRO.DNI = H.DNIPROPIETARIO
WHERE TIPO='BODEGA' OR TIPO='TRASTERO'
GROUP BY PRO.DNI , PRO.NOMBRE, PRO.APELLIDO1, PRO.APELLIDO2
ORDER BY 5 DESC


-- 12.
SELECT DNI, SUM(ISNULL(CP.METROSCONSTRUIDOS, 0) + 
			ISNULL(P.METROSCONSTRUIDOS, 0)) AS METROS_CONSTRUIDOS
FROM PROPIETARIO PRO
LEFT JOIN PISO P ON P.DNIPROPIETARIO = PRO.DNI
LEFT JOIN CASAPARTICULAR CP ON CP.DNIPROPIETARIO = PRO.DNI
GROUP BY DNI

-- 13.
SELECT DNI , NOMBRE, APELLIDO1, ISNULL(APELLIDO2, '') AS APE2
FROM PROPIETARIO PRO
WHERE PRO.SEXO='M' AND PRO.DNI IN (
	SELECT DNIPROPIETARIO FROM HUECO WHERE TIPO='GARAJE'
) AND DNI NOT IN (
	SELECT DNIPROPIETARIO 
	FROM PISO P
	INNER JOIN BLOQUEPISOS BP ON BP.CALLE = P.CALLE AND BP.NUMERO = P.NUMERO
	WHERE ASCENSOR = 'N'
)
