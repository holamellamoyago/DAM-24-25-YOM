USE EMPRESANEW

if OBJECT_ID('DatosDepartamento') is not null
	drop procedure  DatosDepartamento


GO
CREATE PROCEDURE  DatosDepartamento
(
	@NAME_DPTO VARCHAR(100), @N_EMPLEADOS SMALLINT OUTPUT, 
	@N_FIJOS SMALLINT OUTPUT, @TOTAL_SALARIOS INT OUTPUT,
	@NAME_DIRECTOR VARCHAR(100) OUTPUT
)
AS
BEGIN
SET NOCOUNT ON
		
			DECLARE @NUM_DPTO TINYINT
			SELECT @NUM_DPTO = NumDepartamento
			FROM DEPARTAMENTO
			WHERE NomeDepartamento = @NAME_DPTO
		
		SELECT @N_EMPLEADOS = COUNT(*)
		FROM EMPREGADO
		WHERE NumDepartamentoPertenece = @NUM_DPTO
		
		SELECT @N_FIJOS = COUNT(*)
		FROM EMPREGADO E 
		INNER JOIN EMPREGADOFIXO EF ON E.NSS = EF.NSS
		WHERE NumDepartamentoPertenece = @NUM_DPTO
		
		SELECT @TOTAL_SALARIOS = SUM(SALARIO)
		FROM EMPREGADO E 
		INNER JOIN EMPREGADOFIXO EF ON E.NSS = EF.NSS
		WHERE NumDepartamentoPertenece = @NUM_DPTO
		
		-- COGER NOMBRE DIRECTOR
		
		DECLARE @NSS_DIRECTOR VARCHAR(15)
		
		SELECT @NSS_DIRECTOR = NSSDirector
		FROM DEPARTAMENTO 
		WHERE NomeDepartamento = @NAME_DPTO
		
		SELECT @NAME_DIRECTOR =  
			nome + ' ' + Apelido1 + ' ' + ISNULL(APELIDO2, '')
		FROM EMPREGADO
		WHERE NSS = @NSS_DIRECTOR
		
		
		-- RETURNS 
		
		IF (@NAME_DPTO NOT IN (SELECT NOMEDEPARTAMENTO
							FROM DEPARTAMENTO))
			RETURN -1
		ELSE 
			RETURN 0 
END

GO
IF OBJECT_ID('visualizardatosdepartamento') IS NOT NULL
	DROP PROCEDURE visualizardatosdepartamento


GO
CREATE PROCEDURE visualizardatosdepartamento
(@NOME_DPTO VARCHAR(100))
AS 
BEGIN
	SET NOCOUNT ON 
	
	DECLARE @N_EMPLEADOS SMALLINT
	DECLARE @N_FIJOS SMALLINT	
	DECLARE @TOTAL_SALARIOS INT
	DECLARE @NAME_DIRECTOR VARCHAR(100)

	EXEC DatosDepartamento @NOME_DPTO, @N_EMPLEADOS OUTPUT ,
						@N_FIJOS OUTPUT, @TOTAL_SALARIOS OUTPUT,
						@NAME_DIRECTOR OUTPUT
						
	PRINT('DEPARTAMENTO: ' + @NOME_DPTO)
	PRINT('DIRECTOR: ' + @NAME_DIRECTOR)
	PRINT('TOTAL SALARIO: ' + CAST(@TOTAL_SALARIOS AS VARCHAR(30)))
	PRINT('NUMERO DE EMPLEADOS FIJOS ' + CAST(@N_FIJOS AS VARCHAR(30))	 + 
			' DE UN TOTAL DE '  + CAST(@N_EMPLEADOS AS VARCHAR(30)))
					
END

GO
IF OBJECT_ID('prDatosDepartamentos') IS NOT NULL
	DROP PROCEDURE prDatosDepartamentos

GO
CREATE PROCEDURE prDatosDepartamentos
AS
BEGIN
	SET NOCOUNT ON 
	
	DECLARE @NOMBRE_DPTO VARCHAR(100)
	
	DECLARE CURSOR1 CURSOR STATIC FOR
	SELECT D.NOMEDEPARTAMENTO FROM DEPARTAMENTO D
	
	OPEN CURSOR1 
	FETCH NEXT FROM CURSOR1 INTO @NOMBRE_DPTO
	
	WHILE(@@FETCH_STATUS = 0)
	BEGIN 
		PRINT @NOMBRE_DPTO
		PRINT '---------------'
		
		FETCH NEXT FROM CURSOR1 INTO @NOMBRE_DPTO
	END
	
	CLOSE CURSOR1
	DEALLOCATE CURSOR1
	
	
END


EXEC prDatosDepartamentos




GO
IF OBJECT_ID('fnLetraDNI') IS NOT NULL
	DROP FUNCTION fnLetraDNI 
	
GO
CREATE FUNCTION fnLetraDNI 
(
	@DNI INT
)
RETURNS CHAR(1)
AS 
BEGIN
	DECLARE @LETRAS VARCHAR(100)
	SET @LETRAS = 'TRWAGMYFPDXBNJZSQVHLCKE'

	RETURN SUBSTRING(@LETRAS, (@DNI%23)+1,1)
END

GO
SELECT DBO.fnLetraDNI(39511342)

GO
IF OBJECT_ID('prLetraDNI') IS NOT NULL
	DROP PROCEDURE prLetraDNI
GO
CREATE PROCEDURE prLetraDNI
(
	@DNI INT, @LETRA CHAR(1) OUTPUT
)
AS 
BEGIN
SET NOCOUNT ON 
	DECLARE @LETRAS VARCHAR(100)
	SET @LETRAS = 'TRWAGMYFPDXBNJZSQVHLCKE'

	SELECT @LETRA =  SUBSTRING(@LETRAS, (@DNI%23)+1,1)
END

GO

DECLARE @LETRA2 CHAR(1)
EXEC prLetraDNI @DNI = 39511342, @LETRA = @LETRA2 OUTPUT

SELECT @LETRA2