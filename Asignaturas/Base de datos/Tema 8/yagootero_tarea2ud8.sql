use EMPRESANEW

-- 1 A 

IF OBJECT_ID ('FnEdad') IS NOT NULL
	DROP FUNCTION FnEdad
	
GO

CREATE FUNCTION FnEdad
	(@FECHA DATE)
	RETURNS INT
BEGIN 
	RETURN DATEDIFF(DD, @FECHA, GETDATE()) /365.25
END


SELECT dbo.FnEdad('11/02/2003') AS EDAD


SELECT NOME + ' ' + APELIDO1 + ' ' + ISNULL(Apelido2,'') AS NOME, 
		DBO.FnEdad(DataNacemento) AS EDAD
FROM EMPREGADO E 

-- 1B
IF OBJECT_ID('prFamiliarEdad') IS NOT NULL 
	DROP PROCEDURE prFamiliarEdad

GO

CREATE PROCEDURE prFamiliarEdad
	(@EDAD INT)
AS
SELECT * , 
(SELECT COUNT(*)
	FROM FAMILIAR F
	WHERE DATEDIFF(DD, DataNacemento, GETDATE()) / 365.25 > @EDAD AND
		F.NSS_empregado = E.NSS
) AS NUM_FAMILIARES
FROM EMPREGADO E 

DECLARE @EDAD2 INT
SELECT @EDAD2 = dbo.FnEdad('11/02/2002')

EXEC dbo.prFamiliarEdad @EDAD = @EDAD2


-- 2. 
IF OBJECT_ID('fnNumEmplMayorQueEdad') IS NOT NULL
	DROP FUNCTION fnNumEmplMayorQueEdad
GO

CREATE FUNCTION fnNumEmplMayorQueEdad
	(@NOMDEPA VARCHAR,@EDAD INT)
RETURNS INT
AS
BEGIN 

	DECLARE @VALOR_A_DEVOLVER INT

	IF ((SELECT COUNT(*)
		FROM DEPARTAMENTO D 
		WHERE D.NomeDepartamento = @NOMDEPA
	) <= 0) SELECT @VALOR_A_DEVOLVER = -1
	ELSE IF (@EDAD < 0)
		 SELECT @VALOR_A_DEVOLVER = -2
	ELSE
	BEGIN
	SELECT @VALOR_A_DEVOLVER = (SELECT COUNT(*)
			FROM EMPREGADO E 
			INNER JOIN DEPARTAMENTO D ON E.NumDepartamentoPertenece = D.									NumDepartamento
			WHERE (DATEDIFF(DD, E.DataNacemento, GETDATE()) / 365.25 ) > @EDAD
			AND 
			D.NomeDepartamento = @NOMDEPA
			)
	END
	
	RETURN @VALOR_A_DEVOLVER
END

GO



-- 3.

IF OBJECT_ID('FNEJER3') IS NOT NULL
	DROP FUNCTION FNEJER3

GO 
CREATE FUNCTION FNEJER3 
	(@N INT)
	RETURNS TABLE
AS
	RETURN (
		SELECT NomeDepartamento
		FROM DEPARTAMENTO D 
		INNER JOIN PROXECTO P ON P.NumDepartControla = D.NumDepartamento
		GROUP BY NomeDepartamento
		HAVING COUNT(P.NumProxecto) > @N
		
	)
GO
	
-- 4. 
IF OBJECT_ID('FN_ESVOCAL') IS NOT NULL
	DROP FUNCTION FN_ESVOCAL

GO
CREATE FUNCTION FN_ESVOCAL
	(@C CHAR)
RETURNS BIT
AS 
BEGIN 
	RETURN (CASE
		WHEN LOWER(@C) IN ('a','e','i','o','u',
							'á','é','í','ó','ú') THEN 1
		ELSE 0
		END)
END

GO

SELECT dbo.FN_ESVOCAL('C')



IF OBJECT_ID('fnVocales') IS NOT NULL
	DROP FUNCTION fnVocales 
GO

CREATE FUNCTION fnVocales 
	(@V VARCHAR(250))
RETURNS INT
BEGIN

DECLARE @CONTADOR INT
SET @CONTADOR = 0

DECLARE @CONTADORVocales INT
SET @CONTADORVocales = 0


WHILE @CONTADOR != LEN(@V) +1 
	BEGIN
	
		IF (dbo.FN_ESVOCAL(SUBSTRING(@V, @CONTADOR,1)) = 1)
		BEGIN
			SET @CONTADORVocales = @CONTADORVocales +1
		END
		
		SET @CONTADOR = @CONTADOR +1
	END;
	
RETURN @CONTADORVocales
END

GO

SELECT dbo.fnVocales('HOLA MUNDO')


SELECT SUBSTRING('HOLA MUNDO',3,1)

-- 4C 
USE EMPRESANEW

IF OBJECT_ID('FNVOCALESNOMBRE') IS NOT NULL
	DROP FUNCTION FNVOCALESNOMBRE 
	


GO
CREATE FUNCTION FNVOCALESNOMBRE
	(@D VARCHAR)
	RETURNS @RESULTADO TABLE (
		NOMBRECOMPLETO VARCHAR,
		CONTADOR INT
	)
AS
BEGIN
DECLARE @NUMD INT
SELECT @NUMD = NUMDEPARTAMENTO FROM DEPARTAMENTO WHERE NomeDepartamento = @D


INSERT INTO @RESULTADO 
	SELECT NOME + ' ' + APELIDO1 + ' ' + ISNULL(APELIDO2,'') AS NOMBRECOMPLETO,
		dbo.fnVocales(NOME + ' ' + APELIDO1 + ' ' + ISNULL(APELIDO2,'')) AS CONTEO
	FROM EMPREGADO E
	WHERE E.NumDepartamentoPertenece != @NUMD
	
	
	RETURN
END

GO
SELECT * FROM dbo.FNVOCALESNOMBRE('PERSOAL')
SELECT * FROM DEPARTAMENTO
SELECT dbo.fnVocales(NOME + ' ' + APELIDO1 + ' ' + ISNULL(APELIDO2,'')) FROM EMPREGADO
DECLARE @NUMD INT
SELECT @NUMD = NUMDEPARTAMENTO FROM DEPARTAMENTO WHERE NomeDepartamento = 'PERSOAL'
SELECT @NUMD

	
 







