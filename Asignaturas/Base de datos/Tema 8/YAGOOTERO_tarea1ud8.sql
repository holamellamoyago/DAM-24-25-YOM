IF OBJECT_ID('DBO.PR_SUMN') IS NOT NULL
DROP PROCEDURE DBO.PR_SUMN;

GO
CREATE PROCEDURE PR_SUMN
@NUMERO INT, @SUMA INT OUTPUT
AS 
BEGIN

IF (@NUMERO < 0) RETURN -1
END


IF OBJECT_ID('DBO.MayorDeDosEnteros ') IS NOT NULL
DROP PROCEDURE DBO.MayorDeDosEnteros;
GO
 
CREATE PROCEDURE MayorDeDosEnteros
@N1 INT , @N2 INT
AS
BEGIN 
IF @N1 = @N2 PRINT 'SON IGUALES'
IF @N1 > @N2 
	PRINT CAST(@N1 AS VARCHAR) + ' ES MAYOR QUE ' + CAST(@N2 AS VARCHAR)
ELSE
	PRINT @N2 + ' ES MAYOR QUE ' + @N1
	
END

EXEC MayorDeDosEnteros 9,9
EXEC MayorDeDosEnteros @N1 = 4, @N2=3Ç

-- 3. 
USE EMPRESANEW;

IF OBJECT_ID('DBO.MayorQueSueldoMin') IS NOT NULL
DROP PROCEDURE MayorQueSueldoMin
GO

CREATE PROCEDURE MayorQueSueldoMin 
@X INT
AS 
BEGIN 
IF @X < 0 RETURN -1 

DECLARE @MIN_SALARIO INT
SELECT @MIN_SALARIO = MIN(SALARIO) FROM EMPREGADOFIXO

IF @X < @MIN_SALARIO
	PRINT 'el valor: ' + CAST(@X AS VARCHAR) +' es menor que el sueldo del empleado que menos gana: ' + 
	CAST(@MIN_SALARIO AS VARCHAR) 
ELSE 
	PRINT 'el valor: ' + CAST(@X AS VARCHAR)  +' NO es menor que el sueldo del empleado que menos gana: ' +		CAST(@MIN_SALARIO AS VARCHAR) 

END	

EXEC MayorQueSueldoMin 100


-- 4.
IF OBJECT_ID('DBO.DatosDepartamento') IS NOT NULL
BEGIN 
DROP PROCEDURE DatosDepartamento
END

GO

IF OBJECT_ID('DBO.visualizardatosdepartamento') IS NOT NULL
BEGIN 
DROP PROCEDURE visualizardatosdepartamento
END

GO

CREATE PROCEDURE DatosDepartamento
@N VARCHAR
AS

DECLARE @NOME_DEP VARCHAR
DECLARE @NOME_APE VARCHAR
DECLARE @SALARIO	INT


SELECT NomeDepartamento = @NOME_DEP, CONCATE() Nome + ' ' + Apelido1 + ' ' + Apelido2 = @NOME_APE, ISNULL(EF.Salario, '')
INTO , , @SALARIO
FROM DEPARTAMENTO D
INNER JOIN EMPREGADO E ON E.NumDepartamentoPertenece = D.NumDepartamento
LEFT JOIN EMPREGADOFIXO EF ON EF.NSS = E.NSS
WHERE NomeDepartamento=@N

PRINT 'DEPARTAMENTO: ' + (SELECT NOMEDEPARTAMENTO FROM DEPARTAMENTO
							WHERE NOMEDEPARTAMENTO = @N)

GO

CREATE PROCEDURE visualizardatosdepartamento
@N VARCHAR
AS
EXEC DatosDepartamento 'PERSOAL'


EXEC DatosDepartamento 'PERSOAL'


-- 5 . 
CREATE PROCEDURE INICIALEMPLEADOS 
	(@NSS VARCHAR OUTPUT, @NOMBRECOMPLETO VARCHAR OUTPUT, @NOMBREDEPARTAMENTO VARCHAR OUTPUT, 
		@NOMBRECOPLETOSUPERVISOR VARCHAR OUTPUT)
		
	
GO

IF OBJECT_ID ('INICIALEMPLEADOS') IS NOT NULL
	DROP PROCEDURE INICIALEMPLEADOS

GO
CREATE PROCEDURE INICIALEMPLEADOS 
	@CARACTER CHAR(1) = 'C'
AS 
SET NOCOUNT OFF 
IF(@CARACTER NOT LIKE '[a-zA-Z]') RETURN -1
SELECT E.NSS, E.NOME, E.Apelido1, NomeDepartamento, JEFE.Nome, JEFE.Apelido1
FROM EMPREGADO E
INNER JOIN DEPARTAMENTO	D ON D.NumDepartamento = E.NumDepartamentoPertenece
LEFT JOIN EMPREGADO JEFE ON E.NSSSupervisa = JEFE.NSS
WHERE LEFT(E.NOME,1) = @CARACTER
RETURN @@ROWCOUNT

GO
DECLARE @VALOR VARCHAR
EXEC @VALOR = INICIALEMPLEADOS 'A'

IF OBJECT_ID ('InsertarEmpleados') IS NOT NULL
	DROP PROCEDURE InsertarEmpleados
	
GO
CREATE PROCEDURE InsertarEmpleados
	@CARACTER CHAR(1)
AS 
BEGIN
SET NOCOUNT ON
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
				WHERE TABLE_NAME = 'EMPREGADODEPARTAMENTO'
			)
BEGIN
DROP TABLE EMPREGADODEPARTAMENTO
END
	
CREATE TABLE EMPREGADODEPARTAMENTO
(
	NSS VARCHAR CONSTRAINT PK_NSSEMPLEADO PRIMARY KEY,
	NOMBREEMPLE VARCHAR,
	APE1EMPLE VARCHAR,
	NOMBREDEPARTAMENTO VARCHAR,
	NOMEJEFE VARCHAR,
	APE1JEFE VARCHAR
)

DECLARE @VALOR INT

INSERT INTO EMPREGADODEPARTAMENTO 
EXEC @VALOR=INICIALEMPLEADOS @CARACTER

IF @VALOR = -1 PRINT 'PARAMETRO INCORRECTO'
ELSE IF @VALOR = 0 PRINT 'AAAA'


END

EXEC InsertarEmpleados 'A'




-- 6 . 

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES
				WHERE TABLE_NAME = 'COPAEMPREJADOFIJO'
			)
BEGIN
DROP TABLE COPAEMPREJADOFIJO
END

GO
SELECT * INTO COPIAEMPREGADOFIJO FROM EMPREGADOFIXO

GO

IF OBJECT_ID ('AUMENTARSALARIO') IS NOT NULL
	DROP PROCEDURE AUMENTARSALARIO

GO

CREATE PROCEDURE AUMENTARSALARIO(@PORCENTAJE DECIMAL(5,2))
AS
SET NOCOUNT ON 
IF @PORCENTAJE BETWEEN 1 AND 15
BEGIN
	UPDATE COPIAEMPREGADOFIJO
	SET Salario = CASE 
					WHEN NSS IN (SELECT DISTINCT NSSSUPERVISA FROM EMPREGADO)
						THEN Salario * (1+@PORCENTAJE/100)
					ELSE Salario * (1+@PORCENTAJE/100)
					END
	WHERE NSS IN (SELECT NSSEmpregado FROM EMPREGADO_PROXECTO EP
					GROUP BY NSSEmpregado
					HAVING COUNT(*)> 2)






END