USE EMPRESANEW;

ALTER TABLE EMPREGADO
	ADD NUM_PROXECTOS INT NULL

GO
IF OBJECT_ID('pr_ActulizarNumpro') IS NOT NULL
	DROP PROCEDURE pr_ActulizarNumpro

GO
CREATE PROCEDURE pr_ActulizarNumpro
	@NSS VARCHAR(15), @NUM_PROXECTOS INT OUTPUT 
AS
SET NOCOUNT ON 
BEGIN

	IF @NSS NOT IN (SELECT NSS FROM EMPREGADO)
		RETURN -1
	ELSE 
		RETURN 0
		
	SELECT @NUM_PROXECTOS = COUNT(*)
	FROM EMPREGADO_PROXECTO EP
	WHERE EP.NSSEmpregado = @NSS
	
	UPDATE EMPREGADO
	SET NUM_PROXECTOS = @NUM_PROXECTOS
	WHERE NSS = @NSS
END

GO
IF OBJECT_ID('pr_ActualizarTodosNumpro') IS NOT NULL
	DROP PROCEDURE pr_ActualizarTodosNumpro
	
GO
CREATE PROCEDURE pr_ActualizarTodosNumpro
AS 
SET NOCOUNT ON 
BEGIN
	
	DECLARE CURSOR1 CURSOR DYNAMIC FOR
	SELECT NSS FROM EMPREGADO
	
	DECLARE @NSS VARCHAR(15)
	DECLARE @NOME VARCHAR (300)
	DECLARE @NUM_PRO TINYINT 
	
	OPEN CURSOR1
	FETCH NEXT FROM CURSOR1 INTO @NSS
	WHILE (@@FETCH_STATUS <> -1 )
		IF (@@FETCH_STATUS = -2)
		BEGIN
			FETCH NEXT FROM CURSOR1 INTO @NSS
			CONTINUE
		END
		
	EXEC pr_ActulizarNumpro @NSS, @NUM_PRO OUTPUT
	
	CLOSE CURSOR1
	DEALLOCATE CURSOR1
	
	
	
	
END

GO

IF OBJECT_ID('pr_CrearEdicion') IS NOT NULL
	DROP PROCEDURE pr_CrearEdicion
	
GO

CREATE PROCEDURE pr_CrearEdicion
	(@CURSO INT, @LUGAR VARCHAR(100) = NULL, @FECHA DATE = NULL, @PROFESOR VARCHAR(15))
AS 
SET NOCOUNT ON 
BEGIN
	
	IF @CURSO NOT IN (SELECT CODIGO FROM CURSO)
		RETURN -1
	IF @PROFESOR NOT IN (SELECT NSS FROM EMPREGADOFIXO)
		RETURN -2
		
	DECLARE @ULT_EDICION INT 
	SELECT @ULT_EDICION = MAX(NUMERO) 
	FROM  EDICION
	WHERE Codigo = @CURSO
	
	DECLARE @FECHA2 DATE 
	IF (@FECHA IS NULL)
	-- FALTA TERMINAR CADA VARAIBLE 
	-- SI ES NUL FECHA Y LUGAR
	
	IF (@FECHA IS NULL)
	BEGIN
		INSERT INTO EDICION
		VALUES (@CURSO, @ULT_EDICION +1, DATEADD(MM, +1 , GETDATE()),
					@LUGAR, @PROFESOR )
	END

	
END 

-- 2

GO
USE EMPRESANEW

IF OBJECT_ID('pr_CrearEdicion') IS NOT NULL
	DROP PROCEDURE pr_CrearEdicion
	
GO

CREATE PROCEDURE pr_CrearEdicion (
	@NOMBRE_CURSO VARCHAR(50),
	@LUGAR VARCHAR(50) = 'VIGO',
	--@FECHA  DATE = DATEADD(MM,1,GETDATE()),
	@FECHA DATE = NULL,
	@DNI_PROFESOR VARCHAR(15)
)
AS
SET NOCOUNT ON 
BEGIN 

	IF @NOMBRE_CURSO NOT IN (SELECT NOME FROM CURSO) 
		RETURN -1
	IF @DNI_PROFESOR NOT IN (SELECT NSS FROM EMPREGADOFIXO) 
		RETURN -2
	IF @FECHA IS NULL 
		SELECT @FECHA = DATEADD(MM,1,GETDATE())
		
	DECLARE @COD_CURSO TINYINT 
	SET @COD_CURSO = (SELECT CODIGO 
						FROM CURSO 
						WHERE Nome = @NOMBRE_CURSO)
						
	DECLARE @ULT_NUMERO_CURSO TINYINT
	SET @ULT_NUMERO_CURSO = ISNULL((SELECT MAX(NUMERO)
							FROM EDICION
							WHERE Codigo = @COD_CURSO
							),0) +1
							
	
		
	INSERT INTO CURSO VALUES
	(@COD_CURSO, @ULT_NUMERO_CURSO, @FECHA, @LUGAR, @DNI_PROFESOR)

END

IF OBJECT_ID('pr_CrearModificarCurso') IS NOT NULL
	DROP PROCEDURE pr_CrearModificarCurso
	
GO
CREATE PROCEDURE pr_CrearModificarCurso
(
@NOMBRE_CURSO VARCHAR(50),
@HORAS SMALLINT,
@LUGAR VARCHAR(50),
@FECHA DATE,
@COD_PROFESOR VARCHAR(50),
@NOM_DPTO TINYINT
)
AS 
BEGIN 
SET NOCOUNT ON 

	DECLARE @COD_CURSO TINYINT 
	SET @COD_CURSO = (SELECT CODIGO 
						FROM CURSO 
						WHERE Nome = @NOMBRE_CURSO)	
						
	DECLARE @ULT_NUMERO_CURSO TINYINT
	SET @ULT_NUMERO_CURSO = ISNULL((SELECT MAX(CODIGO)
							FROM CURSO
							WHERE Codigo = @COD_CURSO
							),0)
							
	-- COJO EL CODIGO DEL CURSO 
	DECLARE  @COD_DEPTO TINYINT 
	SET @COD_CURSO = (SELECT CODIGO FROM DEPARTAMENTO 
		WHERE NomeDepartamento = @NOMBRE_CURSO)
	
								
								
	-- SI NO EXISTE EL CURSO ... 
	IF @COD_CURSO NOT IN (SELECT CODIGO FROM CURSO)
	BEGIN 
		INSERT INTO CURSO VALUES
		(@ULT_NUMERO_CURSO+1, @NOMBRE_CURSO, @HORAS)
	END	
	ELSES
	BEGIN 
		UPDATE CURSO
		SET Horas = @HORAS
		WHERE Codigo = @COD_CURSO
	END
	
	
	DECLARE @NSS_EMPREGADO_CURSO SMALLINT
	
	DECLARE EMPREGADO_CURSOR CURSOR FOR
	SELECT NSS FROM EMPREGADO 
	WHERE NumDepartamentoPertenece = @COD_DEPTO
	
	
	OPEN EMPREGADO_CURSOR
	FETCH NEXT FROM EMPREGADO_CURSOR INTO @NSS_EMPREGADO_CURSO
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO EDICIONCURSO_EMPREGADO VALUES
		(@COD_CURSO, @ULT_NUMERO_CURSO+1, @NSS_EMPREGADO_CURSO)
		
		FETCH NEXT FROM EMPREGADO_CURSOR INTO @NSS_EMPREGADO_CURSO
	END
	
	CLOSE EMPREGADO_CURSOR
	DEALLOCATE EMPREGADO_CURSOR
	
	EXEC pr_CrearEdicion @NOMBRE_CURSO, @LUGAR, @FECHA, @COD_PROFESOR

END
	




