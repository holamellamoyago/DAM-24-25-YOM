use EMPRESANEW;

IF OBJECT_ID('prDatosDepartamentos') IS NOT NULL
	DROP PROCEDURE prDatosDepartamentos 
	
GO
CREATE PROCEDURE prDatosDepartamentos
	(@N VARCHAR(30))
AS
BEGIN
	DECLARE @DIRECTOR VARCHAR(30)
	DECLARE @TOTALSALARIO	INT
	DECLARE @NUM_EMPLE_FIJOS INT
	DECLARE @NUM_EMPLE_TOTAL INT
	
	SELECT @DIRECTOR = NOME 
	FROM EMPREGADO E 
	INNER JOIN DEPARTAMENTO D ON D.NSSDirector = E.NSS
	AND D.NomeDepartamento = @N
	
	SELECT @TOTALSALARIO = SUM(SALARIO)
	FROM EMPREGADOFIXO EF 
END


----- 1.
GO
CREATE PROCEDURE prDatosDepartamentos2
AS 
SET NOCOUNT ON 

DECLARE DEPARTAMENTO_CURSO CURSOR STATIC FOR
	SELECT D.NOMEDEPARTAMENTO FROM DEPARTAMENTO D
	ORDER BY 1 
	
DECLARE @NOMEDEPARTAMENTO VARCHAR(60)
OPEN DEPARTAMENTO_CURSO 

FETCH NEXT FROM DEPARTAMENTO_CURSO INTO @NOMEDEPARTAMENTO

WHILE @@FETCH_STATUS = 0
	BEGIN
		PRINT 'DEPARTAMENTO ' + @NOMEDEPARTAMENTO
		PRINT '-----------------------------------'
		
		FETCH NEXT FROM DEPARTAMENTO_CURSO INTO @NOMEDEPARTAMENTO
	END
PRINT 'ESTADO DEL FETCH ' + CAST(@@FETCH_STATUS AS VARCHAR(2))
CLOSE DEPARTAMENTO_CURSO 
DEALLOCATE DEPARTAMENTO_CURSO 

GO
EXEC prDatosDepartamentos2 

-- 2.

IF OBJECT_ID('prlistarbasedatos') IS NOT NULL
	DROP PROCEDURE prlistarbasedatos

GO	
CREATE PROCEDURE prlistarbasedatos
AS 
DECLARE BASES_CURSOR CURSOR STATIC FOR
	SELECT NAME FROM SYS.DATABASES AS D
	WHERE NAME NOT IN('tempdb','master','Model','msdb')
	
	DECLARE @NOMEBD VARCHAR(30)
	OPEN BASES_CURSOR
		FETCH NEXT FROM BASES_CURSOR INTO  @NOMEBD
		
		WHILE @@FETCH_STATUS != -1
		BEGIN
			if (@@FETCH_STATUS != -2)
			BEGIN
				FETCH NEXT FROM BASES_CURSOR INTO @NOMEBD
				CONTINUE
			END
			SELECT @NOMEBD 'BASE DE DATOS' 
			EXEC sp_helpdb @NOMEBD
			FETCH NEXT FROM BASES_CURSOR INTO @NOMEBD
		END
	CLOSE BASES_CURSOR
	DEALLOCATE BASES_CURSOR
GO

EXEC prlistarbasedatos


-- 3. 
USE CATASTRO

IF OBJECT_ID('FNLETRADNI') IS NOT NULL
	DROP FUNCTION FNLETRADNI


GO
CREATE FUNCTION FNLETRADNI(@NUMERO INT)
RETURNS CHAR(1)
BEGIN 
DECLARE @LETRAS VARCHAR(23)
SET @LETRAS='TRWAGMYFPDXBNJZSQVHLCKE'

DECLARE @RESTO TINYINT
SELECT @RESTO = @NUMERO % 23 
RETURN SUBSTRING(@LETRAS, @RESTO+1, 1)
END

GO
SELECT DBO.FNLETRADNI(39511342)

-- 3B
GO
CREATE PROCEDURE PRLETRADNI 
@NUMERO INT , @LETRA CHAR(1) OUTPUT 
AS
BEGIN 
DECLARE @LETRAS VARCHAR(23)
SET @LETRAS='TRWAGMYFPDXBNJZSQVHLCKE'

DECLARE @RESTO TINYINT
SELECT @RESTO = @NUMERO % 23 
SELECT @LETRA =  SUBSTRING(@LETRAS, @RESTO+1, 1)
END	


-- 4. 
GO
IF OBJECT_ID('fnTablaDNImal1') IS NOT NULL
	DROP FUNCTION fnTablaDNImal1

GO
CREATE FUNCTION fnTablaDNImal1()
RETURNS @VALIDACIONDNI TABLE
(
	NOMBRE VARCHAR(100),
	DNICORRECTO CHAR(9),
	DNIINCORRECTO CHAR(9)
)

AS 
BEGIN 
	INSERT INTO @VALIDACIONDNI
	SELECT NOMBRE + ' ' + APELLIDO1, DNI,
		LEFT(DNI,LEN(DNI-1) + DBO.FNLETRADNI(CAST(LEFT(DNI,LEN(DNI-1)) AS VARCHAR(9))))
	FROM PROPIETARIO PRO 
	
	RETURN
END

GO
SELECT * FROM DBO.fnTablaDNImal1()


GO
CREATE FUNCTION fnTablaDNImal2()
RETURNS @VALIDACIONDNI TABLE
(
	
)


