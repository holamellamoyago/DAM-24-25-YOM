USE EMPRESANEW;

-- 1.
--SELECT * FROM DEPARTAMENTO

ALTER TABLE DEPARTAMENTO 
	ADD FECHADIRECCION DATE NULL
	CONSTRAINT CK_FECHADIRECCION CHECK (FECHADIRECCION<= GETDATE())
	
GO
IF OBJECT_ID('fnAnhosFechas') IS NOT NULL
	DROP FUNCTION fnAnhosFechas 

GO
CREATE FUNCTION fnAnhosFechas (@FECHA1 DATE, @FECHA2 DATE)
	RETURNS INT
AS 
BEGIN 
	RETURN DATEDIFF(yyyy, @FECHA1, @FECHA2)
END 
GO
	

IF OBJECT_ID('prActualizarDirector') IS NOT NULL
	DROP PROCEDURE prActualizarDirector 
	
GO
CREATE PROCEDURE prActualizarDirector
	(
	@N_DEPART VARCHAR(100), @DIRECTOR CHAR(9) = NULL,
		@FECHA_DIRECC DATE = NULL, @ANHOS_DIRECTOR INT OUTPUT,
		@MENSAJE VARCHAR(100)
	)
AS 
BEGIN
	
	DECLARE @NUMDEPARTAMENTO_DIC INT 
	SELECT @NUMDEPARTAMENTO_DIC = NUMDEPARTAMENTO
	FROM DEPARTAMENTO D 
	WHERE D.NomeDepartamento = @N_DEPART
	
	IF @FECHA_DIRECC > GETDATE()
		SELECT @FECHA_DIRECC = GETDATE()
	
	IF(
		(SELECT NumDepartamentoPertenece FROM EMPREGADO  E 
		INNER JOIN EMPREGADOFIXO EF ON E.NSS = EF.NSS
		WHERE E.NSS = @DIRECTOR) = @NUMDEPARTAMENTO_DIC
	)
	BEGIN

		IF(@DIRECTOR IS NULL AND @FECHA_DIRECC IS NULL)
		BEGIN
			UPDATE DEPARTAMENTO
			SET FECHADIRECCION = DATEDIFF(MM, -2,GETDATE())
			WHERE NOMEDEPARTAMENTO = @N_DEPART
			
		END
		
		ELSE
		
		BEGIN
			UPDATE DEPARTAMENTO 
			SET FECHADIRECCION = @FECHA_DIRECC
			WHERE NOMEDEPARTAMENTO = @N_DEPART
		END
		
	SELECT @ANHOS_DIRECTOR = DBO.fnAnhosFechas(@FECHA_DIRECC,GETDATE())
	
	DECLARE @NOME_DIRECTOR VARCHAR(100)
	SELECT @NOME_DIRECTOR = 
		NOME + ' ' + APELIDO1 FROM EMPREGADO WHERE NSS = @DIRECTOR
	SELECT @MENSAJE = 'SE ACTUALIZO A ' + @NOME_DIRECTOR + ' QUE LLEVA DESDE ' + @FECHA_DIRECC 
	
END

SELECT * FROM EMPREGADOFIXO
SELECT * FROM DEPARTAMENTO
EXEC prActualizarDirector 'CONTABILIDAD', '0001112', '11-02-2003'