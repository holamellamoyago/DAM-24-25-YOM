-- Yago Otero Martínez - 39511342X

-- EJERCICIO 1 CREACION BD Y ARCHIVOS
USE master;

IF EXISTS (SELECT * FROM SYS.databases WHERE name ='RIOS')
	BEGIN
		DROP DATABASE RIOS
		PRINT 'BD BORRADA'
END

CREATE DATABASE RIOS
ON PRIMARY
(
	NAME=ARCHIVO_DATA1,
	FILENAME='C:\EXRIOS\ARCHIVO_DATA1.MDF',
	SIZE=20MB,
	MAXSIZE=20MB,
	FILEGROWTH=0
),
FILEGROUP GRUPO1_INFO DEFAULT --PRINCIPAL
(
	NAME=ARCHIVO_SEC1,
	FILENAME='C:\EXRIOS\ARCHIVO_SEC1.NDF',
	SIZE=10MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=500KB
),
(
	NAME=ARCHIVO_SEC2,
	FILENAME='C:\EXRIOS\ARCHIVO_SEC2.NDF',
	SIZE=10MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=500KB
)
LOG ON
(
	NAME=ARCHIVO_LOG1,
	FILENAME='C:\EXRIOS\ARCHIVO_LOG1.LDF',
	SIZE=18MB,
	MAXSIZE=30MB,
	FILEGROWTH=3MB
)

/*
SÍ , CREA TODO CORRECTAMENTE
(VOY A PONER 22 DE TAMAÑO MAX PARA CONTINUAR CON EL EXAMEN)
*/
GO
USE RIOS;



--TABLA RIO
GO
IF EXISTS (SELECT * FROM SYS.tables WHERE name='RIO')
	DROP TABLE RIOS;
	
GO
CREATE TABLE RIO(
	CODIGO	CHAR(5),
	NOMBRE	VARCHAR(30) NOT NULL,
	NACIMIENTO	VARCHAR(40) NOT NULL,
	VERTIENTE	VARCHAR CONSTRAINT DF_VERTIENTE DEFAULT 'MEDITERRANEA',
	LONGITUD	SMALLINT	NOT NULL,
	CAUDAL_ANUAL TINYINT	NOT NULL,
	CAUDALTRIMESTRAL	AS CAUDAL_ANUAL / 4,
	ACTIVIDAD	VARCHAR(20) NOT NULL,
	
	
	CONSTRAINT PK_RIO PRIMARY KEY (CODIGO)	,
	
	CONSTRAINT CK_CODIGO CHECK(
		(CODIGO LIKE '[0-9][0-9][0-9]-[RA]')
	),
	
	CONSTRAINT U_NOMBRE	UNIQUE (NOMBRE),
	
	CONSTRAINT CK_VERTIENTE CHECK (
		(VERTIENTE IN ('MEDITERRANEA', 'ATLANTICA', 'CANTABRA'))
	),
	
	CONSTRAINT CK_LONGITUD	CHECK (
		(LONGITUD > 20.5)
	),
	
	CONSTRAINT CK_CAUDAL	CHECK(
		(CAUDAL_ANUAL >= 10 AND CAUDAL_ANUAL <=1000)
	)
	
	
) ON [PRIMARY]

EXEC SP_HELP 'RIO'
SELECT * FROM RIO

--TABLA TRAMO

GO
IF EXISTS (SELECT * FROM SYS.tables WHERE name ='TRAMO')
	DROP TABLE TRAMO;
	
GO
CREATE TABLE TRAMO(
	CODRIO	CHAR(5),
	NUMERO	SMALLINT IDENTITY(1,1),
	KILOMETROS	TINYINT NOT NULL CONSTRAINT DF_KILOMETROS DEFAULT 2.5,
	CURSO		VARCHAR NOT NULL CONSTRAINT DF_CURSO	DEFAULT 'MEDIO',
	LUGARINICIO	VARCHAR(40)	,
	LUGARFIN	VARCHAR(40),
	
	CONSTRAINT PK_TRAMO PRIMARY KEY (CODRIO, NUMERO),
	
	CONSTRAINT FK_TRAMO_RIO	FOREIGN KEY (CODRIO)
		REFERENCES RIO ON UPDATE CASCADE ON DELETE CASCADE,
		
	CONSTRAINT CK_KILOMETROS CHECK(
		(KILOMETROS > 0.5 AND KILOMETROS <=10)
	),
	
	CONSTRAINT CK_CURSO CHECK(
		(CURSO IN ('ALTO' , 'MEDIO', 'BAJO'))
	),
	
	CONSTRAINT CK_LUGARFIN	CHECK(
		(LUGARFIN != LUGARINICIO)
	)

) ON [PRIMARY]

EXEC SP_HELP 'TRAMO'
SELECT * FROM TRAMO

--TABLA ESPECIETRAMO

CREATE TABLE ESPECIETRAMO(
	CODRIO	CHAR(5),
	NUMERO	SMALLINT,
	CODESPECIE	SMALLINT,
	
	CONSTRAINT PK_ESPECIETRAMO PRIMARY KEY (CODRIO),
	
	CONSTRAINT FK_NUMERO	FOREIGN KEY(CODRIO, NUMERO)
		REFERENCES TRAMO ON UPDATE NO ACTION ON DELETE NO ACTION
)

EXEC SP_HELP 'ESPECIETRAMO'
SELECT * FROM ESPECIETRAMO

--TABLA ESPECIE


CREATE TABLE ESPECIE(
	CODESPECIE	SMALLINT	IDENTITY(5,5),
	NOMBRE		VARCHAR(45),
	COMESTIBLE	BIT NULL,
	
	CONSTRAINT PK_ESPECIE PRIMARY KEY (CODESPECIE)
	
)

-- AQUI AÑADO LA RESTRICCION PARA JUNTAR LAS ESPECIE CON LOS ESPECIETRAMO

GO
ALTER TABLE ESPECIETRAMO
	ADD CONSTRAINT FK_CODESPECIE FOREIGN KEY (CODESPECIE)
		REFERENCES ESPECIE ON UPDATE CASCADE ON DELETE CASCADE

GO
-- EJERCICIO 3 A
GO
ALTER TABLE TRAMO
	DROP CONSTRAINT DF_CURSO
	
GO
ALTER TABLE TRAMO
	DROP CONSTRAINT CK_CURSO

GO
ALTER TABLE TRAMO
	DROP COLUMN CURSO
	
IF EXISTS (SELECT * FROM SYS.tables WHERE name ='RIO_AFLUENTE')
	DROP TABLE RIO_AFLUENTE
GO
	
-- EJERCICIO 3B
CREATE TABLE RIO_AFLUENTE(
	CODRIO	CHAR(5),
	CODRIO_AFLUENTE	CHAR(5),
	
	CONSTRAINT RIO_AFLUENTE2 PRIMARY KEY (CODRIO, CODRIO_AFLUENTE),
	
	CONSTRAINT FK_CODRIO FOREIGN KEY (CODRIO) 
		REFERENCES RIO ON UPDATE NO ACTION ON DELETE NO ACTION,
		
	CONSTRAINT FK_CODRIO_AFLUENTE FOREIGN KEY (CODRIO_AFLUENTE) 
		REFERENCES RIO ON UPDATE NO ACTION ON DELETE NO ACTION
)

--EJERCICIO 3C

GO
ALTER TABLE RIO
	WITH CHECK ADD CONSTRAINT CK_ACTIVIDADRIO CHECK(
		(ACTIVIDAD IN ('PERENNE', 'ESTACIONAL','TRANSITORIO'))
	)
	
EXEC SP_HELP 'RIO'
SELECT * FROM RIO
	

-- EJERCICIO 4

IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'PLAYAS')
	DROP TABLE PLAYAS


IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'SERVICIO')
	DROP TABLE SERVICIO

IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'SERVICIO_PLAYA')
	DROP TABLE SERVICIO_PLAYA

GO
CREATE TABLE PLAYA(
	CODIGO	TINYINT IDENTITY(1,5),
	CODRIO	CHAR(5),
	CODTRAMO SMALLINT ,
	NOMBRE		VARCHAR(120),
	DESCRIPCION	VARCHAR(120),
	PH_AGUA		TINYINT CONSTRAINT DF_PH DEFAULT 7.5 ,
	FECHA_ULT_INSPECCION DATE CONSTRAINT DF_PLAYA DEFAULT DATEADD(YYYY, -1, GETDATE()),
	
	CONSTRAINT PK_PLAYA PRIMARY KEY (CODIGO, CODRIO, CODTRAMO),
	
	CONSTRAINT CODTRAMO FOREIGN KEY (CODRIO ,CODTRAMO)
		REFERENCES TRAMO,
		
	CONSTRAINT CK_FECHA_ULT_INSPECCION CHECK (
		(MONTH(FECHA_ULT_INSPECCION) > MONTH(GETDATE() -2))
	),
	
	CONSTRAINT CK_PH CHECK(
		(PH_AGUA >= 4 AND PH_AGUA <= 9)
	)
)  ON GRUPO1_INFO


CREATE TABLE SERVICIO(
	CODSERVICIO SMALLINT IDENTITY(1,1),
	NOMBRE_SERVICIO VARCHAR(25),
	
	CONSTRAINT PK_SERVICIO PRIMARY KEY (CODSERVICIO)
) ON GRUPO1_INFO

CREATE TABLE SERVICIO_PLAYA(
	CODIGO	TINYINT,
	CODRIO		CHAR(5),
	CODTRAMO	SMALLINT,
	CODSERVICIO	SMALLINT,
	
	CONSTRAINT PK_SERVICIO_PLAYA PRIMARY KEY (CODIGO, CODSERVICIO),
	
	CONSTRAINT FK_CODPLAYA	FOREIGN KEY (CODIGO, CODRIO, CODTRAMO)
		REFERENCES PLAYA (CODIGO, CODRIO, CODTRAMO),
		
	CONSTRAINT FK_CODSERVICIO	FOREIGN KEY (CODSERVICIO)
		REFERENCES SERVICIO
		

) ON GRUPO1_INFO

GO
ALTER TABLE PLAYA
	ADD CONSTRAINT U_NOMBRE_RIO UNIQUE (CODIGO, CODTRAMO)
	


EXEC SP_HELPDB 'RIOS'
SELECT * FROM SYS.databases WHERE name = 'RIOS'
SELECT * FROM SYS.tables WHERE name = 'PLAYA'
SELECT * FROM SYS.tables WHERE name = 'SERVICIO_PLAYA'
SELECT * FROM SYS.tables WHERE name = 'SERVICIO'




