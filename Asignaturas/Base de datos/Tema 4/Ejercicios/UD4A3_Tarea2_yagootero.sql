IF EXISTS (SELECT * FROM SYS.databases WHERE name = 'ProyectosdeInvestigacion')
	DROP DATABASE ProyectosdeInvestigacion;
	
	
	IF EXISTS (SELECT * FROM sys.tables WHERE name ='PROFESORES')
	DROP TABLE PROFESORES
	
IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'GRUPOS')
	DROP TABLE GRUPOS;
	
IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'Departamento')
	DROP TABLE Departamento;
	
IF EXISTS (SELECT * FROM SYS.tables WHERE name = 'Sedes')
	DROP TABLE Sedes;

IF EXISTS (SELECT * FROM SYS.types WHERE name = 'TIPODNI')
	DROP TYPE TIPODNI;
	
IF EXISTS (SELECT * FROM SYS.schemas WHERE name = 'GRUPOPROFES')
	DROP SCHEMA GRUPOPROFES;
	

	
	
CREATE DATABASE ProyectosdeInvestigacion;

	
CREATE TYPE TIPODNI
	FROM CHAR(9) NOT NULL;
	
GO

CREATE SCHEMA GrupoProfes;

GO
CREATE TABLE Departamento
(	CodigoDpto	TINYINT	NOT NULL IDENTITY,
	Nombredto	varchar(50)	NOT NULL,
	Telefono	char(9) NULL,
	Director	char(9)	NULL
	CONSTRAINT PK_CODIGODPTO PRIMARY KEY(CodigoDpto),
	CONSTRAINT UNIQUE_NOMBREDPTO UNIQUE(NOMBREDTO)
);
	
CREATE TABLE Sedes
(	CODIGOSEDE	SMALLINT	NOT NULL,
	NOMBRESEDE	VARCHAR		NOT NULL,
	CAMPUS		VARCHAR		NOT NULL,
	CONSTRAINT	PK_CODIGOSEDE PRIMARY KEY(CODIGOSEDE),
	

);

GO
--SELECT * FROM SYS.tables WHERE name = 'Sedes'




CREATE TABLE GRUPOS
(	CODIGOGRUPO INT IDENTITY(1,5), --Valor inicial , incremento 
	NOMBREGRUPO	VARCHAR,
	CodDEPARTAMENTO	TINYINT NULL,
	AREACONOCIMIENTO VARCHAR NULL,
	LIDER		TIPODNI NULL,
	CONSTRAINT PK_CODIGOGRUPO PRIMARY KEY(CODIGOGRUPO),
	CONSTRAINT UNIQUE_NOMBREGRUPO	UNIQUE(NOMBREGRUPO),
	CONSTRAINT FK_CODIGOFPTO FOREIGN KEY (CodDEPARTAMENTO) REFERENCES Departamento(CodigoDpto)
);

GO

ALTER DATABASE ProyectosdeInvestigacion
ADD FILEGROUP GRUPOPROFES;
GO

ALTER DATABASE ProyectosdeInvestigacion
ADD FILE
(	NAME='PROFES1',
	FILENAME='C:\basedatos\ProyectosInvestigacion\PROFES1.MDF',
	SIZE=2MB,
	MAXSIZE=15MB,
	FILEGROWTH=1MB
) TO FILEGROUP GRUPOPROFES;


GO

CREATE TABLE PROFESORES(
	DNI TIPODNI,
	NOMBRE	VARCHAR(25) NULL,
	APELLIDOS VARCHAR(25) NULL,
	TITULACION VARCHAR(25) NOT NULL,
	FEHAINICIOINVESTIGACION DATE DEFAULT GETDATE(),
	FECHAFININVESTIGACION DATE DEFAULT NULL,
	
	CONSTRAINT CK_FECHAFININVESTIGACION CHECK (
		(FECHAFININVESTIGACION IS NULL) OR (FECHAFININVESTIGACION >= FEHAINICIOINVESTIGACION)
		AND 
		(YEAR(FEHAINICIOINVESTIGACION)!= 2014)
		
	)
	
)














GO
sp_help 'PROFESORES';





