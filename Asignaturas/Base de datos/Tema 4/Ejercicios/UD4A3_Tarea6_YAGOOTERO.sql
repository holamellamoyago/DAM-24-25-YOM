USE master;
-- Porque no puedo crear FKs IDENTITYs

IF EXISTS (SELECT * FROM SYS.databases WHERE name = 'conflictosbelicos')
	DROP DATABASE conflictosbelicos;
	
IF EXISTS (
	SELECT * FROM SYS.tables
	WHeRE NAME = 'Grupo' AND SCHEMA_ID = schema_id('Grupos')
)

drop table grupos.grupo
GO
	
	
CREATE DATABASE conflictosbelicos
ON PRIMARY 
(	NAME='CONFLICTOS_DATA',
	FILENAME='C:\basedatos\conflictosbelicos\CONFLICTOS_DATA.MDF',
	SIZE=5MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=15%
),
FILEGROUP GRUPO_INTERVIENE
(	NAME='GRUPO_DATOS1',
	FILENAME='C:\basedatos\conflictosbelicos\GRUPO_DATOS1.NDF',
	SIZE=8MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=5MB
),
(	NAME='GRUPO_DATOS2',
	FILENAME='C:\basedatos\conflictosbelicos\GRUPO_DATOS2.NDF',
	SIZE=8MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=5MB
),
FILEGROUP GRUPO_TRAFICANTES
(	NAME='TRAFICANTE_DATOS1',
	FILENAME='C:\basedatos\conflictosbelicos\TRAFICANTE_DATOS1.NDF',
	SIZE=5MB,
	MAXSIZE=12MB,
	FILEGROWTH=3MB
)
LOG ON
(	NAME='CONFLICTO1_LOG',
	FILENAME='C:\basedatos\conflictosbelicos\CONFLICTO1_LOG.LDF',
	SIZE=5MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=3MB
),
(	NAME='CONFLICTO2_LOG',
	FILENAME='C:\basedatos\conflictosbelicos\CONFLICTO2_LOG.LDF',
	SIZE=5MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=3MB
)

GO
USE conflictosbelicos;

GO
-- Creo los SCHEMA para añadirlos a las tablas futuras
CREATE SCHEMA CONFLICTOS AUTHORIZATION dbo;
GO
CREATE SCHEMA GRUPOS AUTHORIZATION DBO;
GO
CREATE SCHEMA TRAFICANTES AUTHORIZATION DBO;
GO
CREATE SCHEMA ORGANIZACIONES AUTHORIZATION DBO;
GO

-- Ahora creo los tipos de datos
CREATE TYPE fecha
	FROM DATE NULL;
	
GO
		



CREATE TABLE CONFLICTOS.CONFLICTO(
	CODIGO	TINYINT IDENTITY(1,1),
	NOMBRE	VARCHAR,
	MUERTOS	SMALLINT,
	HERIDOS	SMALLINT,
	CAUSA	VARCHAR
	
	CONSTRAINT PK_CONFLICTO PRIMARY KEY (CODIGO),
	
	CONSTRAINT CK_CONFLICTO CHECK(
		(CAUSA IN ('RACIAL', 'TERRITORIAL', 'RELIGIOSO', 'ECONOMICO'))
	)
	
)ON [PRIMARY]



CREATE TABLE CONFLICTOS.RACIAL(
	CODIGO TINYINT,
	ETNIA	VARCHAR,
	
	CONSTRAINT PK_RACIAL PRIMARY KEY (CODIGO, ETNIA),
	CONSTRAINT FK_RACIAL_CONFLICTO FOREIGN KEY (CODIGO) REFERENCES  CONFLICTOS.CONFLICTO
		ON UPDATE CASCADE ON DELETE CASCADE
) ON [PRIMARY]

CREATE TABLE CONFLICTOS.TERRITORIAL(
	CODIGO TINYINT,
	COD_REGION	TINYINT,
	
	CONSTRAINT PK_TERRITORIAL	PRIMARY KEY (CODIGO, COD_REGION),
	CONSTRAINT FK_COD_REGION_CONFLICTO	FOREIGN KEY	(CODIGO) REFERENCES CONFLICTOS.CONFLICTO(CODIGO)
	ON DELETE CASCADE ON UPDATE CASCADE	

)ON [PRIMARY]

CREATE TABLE CONFLICTOS.RELIGIOSO(
	CODIGO	TINYINT,
	COD_RELIGION	TINYINT,
	
	CONSTRAINT PK_RELIGIOSO	PRIMARY KEY (CODIGO, COD_RELIGION),
	CONSTRAINT FK_CODIGO_CONFLICTO	FOREIGN KEY	(CODIGO) REFERENCES CONFLICTOS.CONFLICTO(CODIGO)
	ON DELETE CASCADE ON UPDATE CASCADE
)ON [PRIMARY]

CREATE TABLE CONFLICTOS.ECONOMICO (
	CODIGO TINYINT,
	COD_PRIMA	TINYINT,
	
	CONSTRAINT PK_ECONOMICO	PRIMARY KEY(CODIGO, COD_PRIMA),
	CONSTRAINT FK_ECONOMICO	FOREIGN KEY	(CODIGO) REFERENCES CONFLICTOS.CONFLICTO
		ON UPDATE CASCADE ON DELETE CASCADE
)ON [PRIMARY]

CREATE TABLE CONFLICTOS.PAIS
(
	CODIGO	TINYINT,
	COD_PAIS	SMALLINT,
	
	CONSTRAINT PK_PAIS PRIMARY KEY (CODIGO, COD_PAIS),
	CONSTRAINT FK_PAIS	FOREIGN KEY	(CODIGO) REFERENCES CONFLICTOS.CONFLICTO
		ON UPDATE CASCADE ON DELETE CASCADE
)ON [PRIMARY]

CREATE TABLE GRUPOS.GRUPO(

	CODIGO TINYINT IDENTITY,
	NOMBRE VARCHAR,
	BAJAS	SMALLINT,
	
	CONSTRAINT PK_GRUPO	PRIMARY KEY (CODIGO)
)

CREATE TABLE GRUPOS.INTERVIENE (
	GRUPO TINYINT ,
	CONFLICTO TINYINT ,
	F_INICIO FECHA CONSTRAINT DF_F_INICIO DEFAULT GETDATE(),
	F_FIN	DATE,
	
	
	
	
	
	CONSTRAINT PK_INTERVIENE	PRIMARY KEY (GRUPO, CONFLICTO , F_INICIO),
	CONSTRAINT FK_INTERVIENE_GRUPO	FOREIGN KEY	(GRUPO) REFERENCES GRUPOS.GRUPO
		ON DELETE NO ACTION	ON UPDATE CASCADE,
	CONSTRAINT FK_INTERVIENE_CONFLICTO FOREIGN KEY (CONFLICTO) REFERENCES CONFLICTOS.CONFLICTO
		ON DELETE NO ACTION ON UPDATE CASCADE
) ON GRUPO_INTERVIENE

CREATE TABLE GRUPOS.DIVISION(
	GRUPO TINYINT,
	DIVISION	TINYINT,
	BAJAS		SMALLINT,
	HOMBRES		SMALLINT,
	AVIONES		SMALLINT,
	TANQUES		SMALLINT,
	BARCOS		SMALLINT,
	
	CONSTRAINT PK_DIVISION	PRIMARY KEY (GRUPO, DIVISION),
	CONSTRAINT FK_DIVISION	FOREIGN KEY (GRUPO) REFERENCES GRUPOS.GRUPO
		ON DELETE CASCADE	ON UPDATE CASCADE
)ON GRUPO_INTERVIENE

CREATE TABLE GRUPOS.LIDER (
	CODIGO CHAR(5) ,
	CODIGO_GRUPO	TINYINT ,
	APOYOS			SMALLINT,
	
	CONSTRAINT CK_CODIGO CHECK(
		(CODIGO LIKE'[LD][0-9][0-9][0-9]')
	),
	
	CONSTRAINT PK_LIDER		PRIMARY KEY (CODIGO_GRUPO, CODIGO),
	
	CONSTRAINT FK_LIDER		FOREIGN KEY	(CODIGO_GRUPO) REFERENCES GRUPOS.GRUPO
		ON DELETE CASCADE ON UPDATE CASCADE
)ON GRUPO_INTERVIENE

CREATE TABLE GRUPOS.JEFE (
    CODIGO        TINYINT,
    CODIGO_GRUPO     TINYINT,
    DIVISION      TINYINT,
    COD_LIDER     CHAR(5),

    CONSTRAINT PK_JEFE PRIMARY KEY (CODIGO),
    
    -- Modificación en la clave foránea, incluyendo las dos columnas que forman la clave primaria en GRUPOS.LIDER
    CONSTRAINT FK_JEFE_DIVISION FOREIGN KEY (CODIGO_GRUPO, DIVISION) 
        REFERENCES GRUPOS.DIVISION,
        --ON DELETE CASCADE ON UPDATE CASCADE,

    CONSTRAINT FK_JEFE_GRUPO FOREIGN KEY (CODIGO_GRUPO, COD_LIDER) 
        REFERENCES GRUPOS.LIDER (CODIGO_GRUPO, CODIGO)  -- Aseguramos que se refiere a ambas columnas de la clave primaria
        ON DELETE NO ACTION ON UPDATE CASCADE  
) ON GRUPO_INTERVIENE;





CREATE TABLE TRAFICANTES.ARMA (
	CODIGO TINYINT ,
	INDICADOR	SMALLINT,
	
	CONSTRAINT PK_ARMA PRIMARY KEY (CODIGO)
) ON GRUPO_TRAFICANTES

CREATE TABLE TRAFICANTES.TRAFICANTE (
	NOMBRE	VARCHAR,
	
	CONSTRAINT	PK_TRAFICANTE PRIMARY KEY(NOMBRE),
)ON GRUPO_TRAFICANTES

CREATE TABLE TRAFICANTES.STOCK (
    NUM_ARMA TINYINT,
    NOMBRE_TRAFICANTE VARCHAR,
    CANTIDAD SMALLINT,
    
    CONSTRAINT PK_STOCK PRIMARY KEY (NUM_ARMA, NOMBRE_TRAFICANTE),

    CONSTRAINT FK_NUM_ARMA FOREIGN KEY (NUM_ARMA) REFERENCES TRAFICANTES.ARMA
		ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT FK_NUM_TRAFICANTE FOREIGN KEY (NOMBRE_TRAFICANTE) REFERENCES TRAFICANTES.TRAFICANTE
        ON UPDATE CASCADE ON DELETE CASCADE
)ON GRUPO_TRAFICANTES


CREATE TABLE TRAFICANTES.SUMINISTRA	(
	GRUPO	TINYINT,
	ARMA	TINYINT,
	TRAFICANTE	VARCHAR,
	CANTIDAD	SMALLINT,
	
	CONSTRAINT PK_SUMINISTRA PRIMARY KEY (GRUPO, ARMA , TRAFICANTE),
	CONSTRAINT FK_GRUPO_GRUPO FOREIGN KEY (GRUPO) REFERENCES GRUPOS.GRUPO
		ON DELETE CASCADE ON UPDATE CASCADE,
	
	CONSTRAINT FK_TRAFICANTE FOREIGN KEY (TRAFICANTE) REFERENCES TRAFICANTES.TRAFICANTE
		ON DELETE CASCADE ON UPDATE CASCADE,
		
	CONSTRAINT FK_ARMA	FOREIGN KEY	(ARMA)		REFERENCES TRAFICANTES.ARMA
		ON DELETE CASCADE ON UPDATE CASCADE
)ON GRUPO_TRAFICANTES

GO

ALTER DATABASE CONFLICTOSBELICOS
	ADD FILEGROUP Grupo_organizaciones;
	
GO


ALTER DATABASE conflictosbelicos
	ADD FILE 
(	NAME='organización_data1',
	FILENAME='C:\basedatos\conflictosbelicos\organización_data1.NDF',
	SIZE=8MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=3MB
),
(	NAME='organización_data2',
	FILENAME='C:\basedatos\conflictosbelicos\organización_data2.NDF',
	SIZE=8MB,
	MAXSIZE=UNLIMITED,
	FILEGROWTH=3MB
) TO FILEGROUP Grupo_organizaciones;

GO



CREATE TABLE ORGANIZACIONES.ORGANIZACIONES(
	CODIGO TINYINT,
	NOMBRE	VARCHAR,
	TIPO	VARCHAR,
	DEPENDE_DE VARCHAR NULL,
	
	CONSTRAINT PK_ORGANIZACIONES PRIMARY KEY (CODIGO),
--	CONSTRAINT FK_ORGANIZACIONES	FOREIGN KEY	(CODIGO) REFERENCES ORGANIZACIONES
--		ON DELETE SET NULL ON UPDATE CASCADE
)ON Grupo_organizaciones

CREATE TABLE ORGANIZACIONES.DIALOGA(
	GRUPO TINYINT,
	LIDER	CHAR(5),
	ORGANIZACION	TINYINT,
	
	CONSTRAINT PK_DIALOGA	PRIMARY KEY	(GRUPO, LIDER, ORGANIZACION),
	CONSTRAINT FK_DIALOGA	FOREIGN KEY (GRUPO, LIDER) REFERENCES GRUPOS.LIDER
		ON DELETE CASCADE ON UPDATE CASCADE,
	
	CONSTRAINT FK_IORGANIZACION_DIALOGA FOREIGN KEY (ORGANIZACION) REFERENCES ORGANIZACIONES.ORGANIZACIONES
		ON DELETE CASCADE ON UPDATE CASCADE,
		
		
)ON Grupo_organizaciones

CREATE TABLE ORGANIZACIONES.MEDIA(
	CONFLICTO TINYINT ,
	ORGANIZACION	TINYINT,
	FEHCA_INICIO	DATE,
	FECHA_FIN	DATE NULL,
	T_AYUDA		VARCHAR,
	DESPLEGADOS	SMALLINT,
	
	CONSTRAINT PK_MEDIA	PRIMARY KEY (CONFLICTO, ORGANIZACION, FEHCA_INICIO),
	CONSTRAINT FK_CONFLICTO_MEDIA	FOREIGN KEY	(CONFLICTO) REFERENCES CONFLICTOS.CONFLICTO
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FK_ORGANIZACION_MEDIA	FOREIGN KEY (ORGANIZACION)	REFERENCES ORGANIZACIONES.ORGANIZACIONES
		ON DELETE CASCADE ON UPDATE CASCADE,
)ON Grupo_organizaciones


--exec SP_HELPDB 'CONFLICTOSBELICOS'
--EXEC sp_helpfilegroup 
--SELECT * FROM SYS.filegroups
--SELECT * FROM SYS.schemas
--SELECT * FROM SYS.schemas WHERE principal_id = 1 AND name !='dbo'
EXEC sp_helpconstraint 'CONFLICTOS.RACIAL'


